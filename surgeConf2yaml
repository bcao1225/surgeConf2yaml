#!/bin/bash

OUTPUTANNLINE=NO
while  getopts  "p:o:y"  arg #选项后面的冒号表示该选项需要参数  
do  
	 case  $arg  in  
		 p)
			echo source file path：$OPTARG 
			SOURCEPATH=$OPTARG
			;;
		 o)  
			echo 将内容导出到： $OPTARG 
			OUTPATH=$OPTARG
			;; 
		 y)  
			echo  需要将注释行也导出 
			OUTPUTANNLINE=YES
			;;  
		? )  #当有不认识的选项的时候arg为 ?  
		echo  " unkonw argument "  
	exit		
	esac  
done 
OUTPATH=${OUTPATH:-"$HOME/.SpechtLite"}

# 处理行内存在// 注释的情况
annotateLine() {	
	# 行
	echo $1
	# 去掉注释部分后的line
	lastline=${1%//*}

	if [[ $lastline == "" ]];then
		echo 注释行
		# 注释行, 如果导出文件不是定义ip范围的文件，则导出（因为该文件不支持注释）		
		if [[ $OUTPUTANNLINE == 'YES' ]] && [[ $2 != */* ]];then
			# 导出注释的行
			echo \#\#${2//\./\\.} >> "$OUTPATH"/$3
		fi
	# 存在尾部注释行
	else
		# 注释行
		if [[ $lastline == *//* ]] && [[ $OUTPUTANNLINE == 'YES' ]];then
			# 将注释符转化为#
			lastline=${lastline#*/}
			lastline=${lastline#*/}			
			if [[ $lastline != */* ]];then
				echo \#\#${2//\./\\.} >> "$OUTPATH"/$3
			fi	
		else
		# 非注释行
			# 有注释的行, 行内有 ／ 则为direct的ip范围
			if [[ $lastline == */* ]];then
				echo $2 >> "$OUTPATH"/$4
			else
				echo ${2//\./\\.} >> "$OUTPATH"/$3
			fi	
		fi	
	fi
		
}

# 将proxy和direct的规则分离到文件
cat "$SOURCEPATH" | while read oneline
do
	echo read --- $oneline --- line
	
	# 去除需要代理的行
	if [[ $oneline == *Proxy* ]] && [[ $oneline != *=* ]] && [[ $oneline != *[* ]];then
		# 去掉结尾的FINAL的代理
		if [[ $oneline == *FINAL* ]];then
			break
		fi
		
		# 取出，之间的内容
		result=${oneline#*,}
		result=${result%,*Proxy*}
		
		# 如果有注释的行
		if [[ $oneline == *//* ]];then
			annotateLine "$oneline" "$result" "proxylist" "proxyiprange"
		else
			# 没有注释的行 如果行内有 ／ 则为proxy的ip范围
			if [[ $oneline == */* ]];then
				echo $result >> "$OUTPATH"/proxyiprange
			# 没有则导出到 proxylist
			else
				echo ${result//\./\\.} >> "$OUTPATH"/proxylist			
			fi	
		fi
		
	fi
		
		
	# 取出直连的行		
	if [[ $oneline == *DIRECT* ]] && [[ $oneline != *=* ]] && [[ $oneline != *[* ]];then
		# 取出，之间的内容
		result=${oneline#*,}
		result=${result%,*DIRECT*}
		
		# 如果有注释的行
		if [[ $oneline == *//* ]];then
			annotateLine "$oneline" "$result" "directlist" "directiprange"
		else
			# 没有注释的行，如果行内有 ／ 则为direct的ip范围
			if [[ $oneline == */* ]];then
				echo $result >> "$OUTPATH"/directiprange
			else
				echo ${result//\./\\.} >> "$OUTPATH"/directlist
			fi	
		fi
	fi
	
	
	# 取出需要拒绝的行	
	if [[ $oneline == *REJECT* ]] && [[ $oneline != *=* ]] && [[ $oneline != *[* ]];then
		# 取出，之间的内容
		result=${oneline#*,}
		result=${result%,*REJECT*}
		
		# 如果有注释的行
		if [[ $oneline == *//* ]];then
			annotateLine "$oneline" "$result" "rejectlist" "rejectiprange"
		else
			# 没有注释的行，如果行内有 ／ 则为direct的ip范围
			if [[ $oneline == */* ]];then
				echo $result >> "$OUTPATH"/rejectiprange
			else
				echo ${result//\./\\.} >> "$OUTPATH"/rejectlist
			fi
		fi
	fi
done

echo 
echo \>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>successful\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>
echo \>\>\>\>   在 $OUTPATH 可以找到生成的文件 
echo \>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>successful\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>\>
